// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String
  password      String
  profiles      Profile?
  bank_accounts Bank_Account[]

  @@map("users")
}

model Profile {
  id              Int    @id @default(autoincrement())
  identity_type   String
  identity_number String
  address         String
  user            User   @relation(fields: [user_id], references: [id])
  user_id         Int    @unique

  @@map("profiles")
}

model Bank_Account {
  id                       Int           @id @default(autoincrement())
  bank_name                String
  bank_account_number      String
  balance                  Int
  User                     User?         @relation(fields: [user_id], references: [id])
  user_id                  Int?
  source_Transactions      Transaction[] @relation("Source Transactions")
  destination_Transactions Transaction[] @relation("Destination Transactions")

  @@map("bank_accounts")
}

model Transaction {
  id                       Int           @id @default(autoincrement())
  amount                   Float
  Source_Bank_Account      Bank_Account? @relation("Source Transactions", fields: [source_account_id], references: [id])
  source_account_id        Int?
  Destination_Bank_Account Bank_Account? @relation("Destination Transactions", fields: [destination_account_id], references: [id])
  destination_account_id   Int?

  @@map("transactions")
}
